{"ast":null,"code":"var _jsxFileName = \"/home/juan/js/Movie-App/Client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider, useDispatch } from 'react-redux';\nimport { createStore } from 'redux'; //import thunk from 'redux-thunk';\n\nconst increment = () => {\n  return {\n    type: 'Increment'\n  };\n};\n\nconst Decrement = () => {\n  return {\n    type: 'Decrement'\n  };\n};\n\nconst counter = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'Increment':\n      console.log(\"incremente\");\n      return state + 1;\n\n    case 'Decrement':\n      return state - 1;\n\n    default:\n      return state;\n  }\n};\n\nlet store = createStore(counter);\nconst dispatch = useDispatch();\ndispatch(increment());\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }\n})), document.getElementById('root')); //ReactDOM.render(<App />, document.getElementById('root'));","map":{"version":3,"sources":["/home/juan/js/Movie-App/Client/src/index.js"],"names":["React","ReactDOM","App","Provider","useDispatch","createStore","increment","type","Decrement","counter","state","action","console","log","store","dispatch","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,aAAtC;AACA,SAASC,WAAT,QAA4B,OAA5B,C,CACA;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,SAAO;AACHC,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD;;AAMA,MAAMC,SAAS,GAAG,MAAM;AACpB,SAAO;AACHD,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH,CAJD;;AAMA,MAAME,OAAO,GAAG,YAAuB;AAAA,MAAtBC,KAAsB,uEAAd,CAAc;AAAA,MAAXC,MAAW;;AACnC,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAK,WAAL;AACIK,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,aAAOH,KAAK,GAAG,CAAf;;AACJ,SAAK,WAAL;AACI,aAAOA,KAAK,GAAG,CAAf;;AACJ;AACI,aAAOA,KAAP;AAPR;AASH,CAVD;;AAWA,IAAII,KAAK,GAAGT,WAAW,CAACI,OAAD,CAAvB;AAGA,MAAMM,QAAQ,GAAGX,WAAW,EAA5B;AACAW,QAAQ,CAACT,SAAS,EAAV,CAAR;AAEAL,QAAQ,CAACe,MAAT,eACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,EAIIG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJJ,E,CAMA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider, useDispatch } from 'react-redux';\nimport { createStore } from 'redux';\n//import thunk from 'redux-thunk';\n\nconst increment = () => {\n    return {\n        type: 'Increment'\n    }\n}\n\nconst Decrement = () => {\n    return {\n        type: 'Decrement'\n    }\n}\n\nconst counter = (state = 0, action) => {\n    switch (action.type) {\n        case 'Increment':\n            console.log(\"incremente\");\n            return state + 1;\n        case 'Decrement':\n            return state - 1;\n        default:\n            return state;\n    }\n}\nlet store = createStore(counter);\n\n\nconst dispatch = useDispatch();\ndispatch(increment());\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n  \n        \n"]},"metadata":{},"sourceType":"module"}